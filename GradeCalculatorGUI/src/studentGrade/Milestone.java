/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package studentGrade;
import javax.swing.*;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import java.awt.*;
import javax.swing.JOptionPane;

/**
 *
 * @author 63909
 */
public class Milestone extends javax.swing.JFrame {
    
    /**
     * Creates new form Grade
     */
    private final int MAX_M1 = 25;
    private final int MAX_M2 = 40;
    private final int MAX_TA = 35; 

    public Milestone() {
        initComponents();

        jTextFieldMS1.getDocument().addDocumentListener(new ValidationListener(jTextFieldMS1, jLabelErrorMS1, MAX_M1));
        jTextFieldMS2.getDocument().addDocumentListener(new ValidationListener(jTextFieldMS2, jLabelErrorMS2, MAX_M2));
        jTextFieldTA.getDocument().addDocumentListener(new ValidationListener(jTextFieldTA, jLabelErrorTA, MAX_TA));
    }
    
    private class ValidationListener implements DocumentListener{
            private JTextField textField;
            private JLabel errorLabel;
            private int max;

            public ValidationListener(JTextField textField, JLabel errorLabel, int max) {
                this.textField = textField;
                this.errorLabel = errorLabel;
                this.max = max;
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                validate();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                validate();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                // This is generally used for changes that do not change the actual content
                // like attribute changes, so we do not need to validate here.
            }

        private void validate() {
            String text = textField.getText();
            try {
                int value = Integer.parseInt(text);
                if (value < 0 || value > max) {
                    errorLabel.setText("Must be 0-" + max);
                    errorLabel.setVisible(true); // Show error label
                } else {
                    errorLabel.setText(""); // Clear error message
                    errorLabel.setVisible(false); // Hide error label
                }
            } catch (NumberFormatException e) {
                errorLabel.setText("Invalid number");
                errorLabel.setVisible(true); // Show error label
            }
        }
    }

    private void validateAndCalculate() {
        String errorMessage = validateInput(jTextFieldMS1, MAX_M1, "Milestone 1") +
                validateInput(jTextFieldMS2, MAX_M2, "Milestone 2") +
                validateInput(jTextFieldTA, MAX_TA, "Terminal Assessment");

        boolean hasError = !errorMessage.isEmpty();

        if (hasError) {
            JOptionPane.showMessageDialog(this, errorMessage, "Input Error", JOptionPane.ERROR_MESSAGE);
            jTextFieldGradeAverage.setText("");
            return;
        }
        
            // Instantiate Student class          
            Student stud = new Student();
            // Assign textfield values to stud object
            stud.setStudentName(jTextFieldStudentName.getText());
            stud.setStudentNumber(jTextFieldStudentNumber.getText());

            stud.setMS1(Float.parseFloat(jTextFieldMS1.getText()));
            stud.setMS2(Float.parseFloat(jTextFieldMS2.getText()));
            stud.setTA(Float.parseFloat(jTextFieldTA.getText()));

             // Calculate the Average Grade and Display on the jTextField
            jTextFieldGradeAverage.setText(String.valueOf(stud.computeAverage()));
            
    }

    private String validateInput(JTextField textField, int max, String fieldName) {
        String text = textField.getText();
        try {
            int value = Integer.parseInt(text);
            if (value < 1 || value > max) {
                return fieldName + " grade must be between 1 and " + max + ".\n";
            }
        } catch (NumberFormatException e) {
            return fieldName + " grade must be a valid number.\n";
        }
        return "";
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabelStudentName = new javax.swing.JLabel();
        jLabelStudentNumber = new javax.swing.JLabel();
        jLabelMS1 = new javax.swing.JLabel();
        jLabelMS2 = new javax.swing.JLabel();
        jLabelTA = new javax.swing.JLabel();
        jLabelGradeAverage = new javax.swing.JLabel();
        jTextFieldStudentName = new javax.swing.JTextField();
        jTextFieldStudentNumber = new javax.swing.JTextField();
        jTextFieldMS1 = new javax.swing.JTextField();
        jTextFieldMS2 = new javax.swing.JTextField();
        jTextFieldTA = new javax.swing.JTextField();
        jTextFieldGradeAverage = new javax.swing.JTextField();
        jButtonCalculate = new javax.swing.JButton();
        jButtonClear = new javax.swing.JButton();
        jLabelErrorMS1 = new javax.swing.JLabel();
        jLabelErrorMS2 = new javax.swing.JLabel();
        jLabelErrorTA = new javax.swing.JLabel();
        jPanelHeader = new javax.swing.JPanel();
        Header = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Grade Calculator");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 0, 102));

        jLabelStudentName.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        jLabelStudentName.setForeground(new java.awt.Color(0, 0, 0));
        jLabelStudentName.setText("Student Name:");

        jLabelStudentNumber.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        jLabelStudentNumber.setForeground(new java.awt.Color(0, 0, 0));
        jLabelStudentNumber.setText("Student Number:");

        jLabelMS1.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        jLabelMS1.setForeground(new java.awt.Color(0, 0, 0));
        jLabelMS1.setText("Milestone 1:");

        jLabelMS2.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        jLabelMS2.setForeground(new java.awt.Color(0, 0, 0));
        jLabelMS2.setText("Milestone 2:");

        jLabelTA.setBackground(new java.awt.Color(0, 0, 0));
        jLabelTA.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        jLabelTA.setForeground(new java.awt.Color(0, 0, 0));
        jLabelTA.setText("Terminal Assessment:");

        jLabelGradeAverage.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        jLabelGradeAverage.setForeground(new java.awt.Color(0, 0, 0));
        jLabelGradeAverage.setText("Grade Average:");

        jTextFieldStudentName.setBackground(new java.awt.Color(255, 255, 255));
        jTextFieldStudentName.setForeground(new java.awt.Color(0, 0, 51));
        jTextFieldStudentName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldStudentNameActionPerformed(evt);
            }
        });

        jTextFieldStudentNumber.setBackground(new java.awt.Color(255, 255, 255));
        jTextFieldStudentNumber.setForeground(new java.awt.Color(0, 0, 51));

        jTextFieldMS1.setBackground(new java.awt.Color(255, 255, 255));
        jTextFieldMS1.setForeground(new java.awt.Color(0, 0, 51));

        jTextFieldMS2.setBackground(new java.awt.Color(255, 255, 255));
        jTextFieldMS2.setForeground(new java.awt.Color(0, 0, 51));

        jTextFieldTA.setBackground(new java.awt.Color(255, 255, 255));
        jTextFieldTA.setForeground(new java.awt.Color(0, 0, 0));

        jTextFieldGradeAverage.setEditable(false);
        jTextFieldGradeAverage.setBackground(new java.awt.Color(204, 255, 255));

        jButtonCalculate.setBackground(new java.awt.Color(0, 0, 204));
        jButtonCalculate.setForeground(new java.awt.Color(255, 255, 255));
        jButtonCalculate.setText("Calculate");
        jButtonCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCalculateActionPerformed(evt);
            }
        });

        jButtonClear.setBackground(new java.awt.Color(204, 204, 204));
        jButtonClear.setForeground(new java.awt.Color(0, 0, 0));
        jButtonClear.setText("Clear All");
        jButtonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearActionPerformed(evt);
            }
        });

        jLabelErrorMS1.setForeground(java.awt.Color.red);

        jLabelErrorMS2.setForeground(java.awt.Color.red);
        jLabelErrorMS2.setToolTipText("");

        jLabelErrorTA.setForeground(java.awt.Color.red);
        jLabelErrorTA.setToolTipText("");

        jPanelHeader.setBackground(new java.awt.Color(0, 0, 204));

        Header.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 12)); // NOI18N
        Header.setForeground(new java.awt.Color(255, 255, 255));
        Header.setText("MMDC MILESTONE CALCULATOR");

        javax.swing.GroupLayout jPanelHeaderLayout = new javax.swing.GroupLayout(jPanelHeader);
        jPanelHeader.setLayout(jPanelHeaderLayout);
        jPanelHeaderLayout.setHorizontalGroup(
            jPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHeaderLayout.createSequentialGroup()
                .addGap(161, 161, 161)
                .addComponent(Header)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelHeaderLayout.setVerticalGroup(
            jPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelHeaderLayout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(Header)
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelGradeAverage)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabelTA)
                                .addComponent(jLabelMS2, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(jLabelMS1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButtonCalculate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 103, Short.MAX_VALUE)
                                .addComponent(jButtonClear))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jTextFieldGradeAverage, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                                .addComponent(jTextFieldTA, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextFieldMS2, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextFieldMS1, javax.swing.GroupLayout.Alignment.LEADING))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelStudentName)
                            .addComponent(jLabelStudentNumber))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldStudentNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                            .addComponent(jTextFieldStudentName))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabelErrorTA, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelErrorMS2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelErrorMS1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(112, 112, 112))
            .addComponent(jPanelHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanelHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabelErrorMS1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelErrorMS2)
                        .addGap(28, 28, 28)
                        .addComponent(jLabelErrorTA, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelStudentNumber)
                            .addComponent(jTextFieldStudentNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldMS1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelMS1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldMS2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelMS2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldTA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelTA))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelGradeAverage)
                            .addComponent(jTextFieldGradeAverage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonCalculate)
                            .addComponent(jButtonClear))))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldStudentNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldStudentNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldStudentNameActionPerformed

    private void jButtonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearActionPerformed
        // TODO add your handling code here:
    // Clear All Set Value
    jTextFieldStudentName.setText("");
    jTextFieldStudentNumber.setText("");
    
    jTextFieldMS1.setText("");
    jTextFieldMS2.setText("");
    jTextFieldTA.setText("");
    
    jTextFieldGradeAverage.setText("");
    }//GEN-LAST:event_jButtonClearActionPerformed

    private void jButtonCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCalculateActionPerformed
        // TODO add your handling code here:        
    validateAndCalculate();        
    
    }//GEN-LAST:event_jButtonCalculateActionPerformed

    public class Student {
    //attributes
    private String studentName;
    private String studentNumber;
    private float MS1;
    private float MS2;
    private float TA;

    public String getStudentName() {
        return studentName;
    }

    public void setStudentName(String studentName) {
        this.studentName = studentName;
    }

    public String getStudentNumber() {
        return studentNumber;
    }

    public void setStudentNumber(String studentNumber) {
        this.studentNumber = studentNumber;
    }

    public float getMS1() {
        return MS1;
    }

    public void setMS1(float MS1) {
        this.MS1 = MS1;
    }

    public float getMS2() {
        return MS2;
    }

    public void setMS2(float MS2) {
        this.MS2 = MS2;
    }

    public float getTA() {
        return TA;
    }

    public void setTA(float TA) {
        this.TA = TA;
    }

    public float computeAverage() {
        return (MS1 / 25 * 0.25f) + (MS2 / 40 * 0.4f) + (TA / 35 * 0.35f);
    }
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Milestone.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Milestone.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Milestone.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Milestone.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Milestone().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Header;
    private javax.swing.JButton jButtonCalculate;
    private javax.swing.JButton jButtonClear;
    private javax.swing.JLabel jLabelErrorMS1;
    private javax.swing.JLabel jLabelErrorMS2;
    private javax.swing.JLabel jLabelErrorTA;
    private javax.swing.JLabel jLabelGradeAverage;
    private javax.swing.JLabel jLabelMS1;
    private javax.swing.JLabel jLabelMS2;
    private javax.swing.JLabel jLabelStudentName;
    private javax.swing.JLabel jLabelStudentNumber;
    private javax.swing.JLabel jLabelTA;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelHeader;
    private javax.swing.JTextField jTextFieldGradeAverage;
    private javax.swing.JTextField jTextFieldMS1;
    private javax.swing.JTextField jTextFieldMS2;
    private javax.swing.JTextField jTextFieldStudentName;
    private javax.swing.JTextField jTextFieldStudentNumber;
    private javax.swing.JTextField jTextFieldTA;
    // End of variables declaration//GEN-END:variables
}
